name: Build and Deploy Biso App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]  # Also trigger on version tags
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.32.8'  # Your actual Flutter version
  APP_VERSION: '2.0.0'
  BUILD_NUMBER: '60'

jobs:
  build-and-deploy-android:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
    
    - name: Generate localization files
      run: flutter pub run intl_utils:generate
    
    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs
      continue-on-error: true
    
    - name: Run tests
      run: flutter test
      continue-on-error: true
    
    # Decode and setup Android signing
    - name: Setup Android signing
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
        echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties
    
    - name: Build Android App Bundle (AAB)
      run: flutter build appbundle --release --build-name=${{ env.APP_VERSION }} --build-number=${{ env.BUILD_NUMBER }}
    
    - name: Build Android APK
      run: flutter build apk --release --build-name=${{ env.APP_VERSION }} --build-number=${{ env.BUILD_NUMBER }}
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: biso-android-apk-v${{ env.APP_VERSION }}
        path: build/app/outputs/flutter-apk/app-release.apk
    
    # Deploy to Google Play Console
    - name: Deploy to Google Play Console
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.biso.no
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: internal  # Options: internal, alpha, beta, production
        status: completed
        changesNotSentForReview: false
        mappingFile: build/app/outputs/mapping/release/mapping.txt

  build-and-deploy-ios:
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
    
    - name: Generate localization files
      run: flutter pub run intl_utils:generate
    
    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs
      continue-on-error: true
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    # Setup iOS signing certificates and provisioning profiles
    - name: Install Apple Certificate
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.IOS_CERTIFICATE_P12_BASE64 }}
        p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
    
    - name: Install Provisioning Profile
      run: |
        echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles/
        cp ~/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
    
    - name: Build iOS Archive
      run: |
        flutter build ipa --release --build-name=${{ env.APP_VERSION }} --build-number=${{ env.BUILD_NUMBER }}
    
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: biso-ios-ipa-v${{ env.APP_VERSION }}
        path: build/ios/ipa/biso.ipa
    
    # Deploy to App Store Connect
    - name: Deploy to App Store Connect
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: build/ios/ipa/biso.ipa
        issuer-id: ${{ secrets.APPLE_API_ISSUER_ID }}
        api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPLE_API_PRIVATE_KEY }}

  # Only run tests and builds for PRs (no deployment)
  test-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
    
    - name: Generate localization files
      run: flutter pub run intl_utils:generate
    
    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs
      continue-on-error: true
    
    - name: Run tests
      run: flutter test
    
    - name: Build Android (test)
      run: flutter build apk --debug
    
    - name: Build iOS (test, no signing)
      run: flutter build ios --debug --no-codesign

  create-github-release:
    needs: [build-and-deploy-android, build-and-deploy-ios]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Android APK
      uses: actions/download-artifact@v4
      with:
        name: biso-android-apk-v${{ env.APP_VERSION }}
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: biso-v${{ env.APP_VERSION }}-build-${{ steps.date.outputs.date }}
        name: Biso v${{ env.APP_VERSION }} - Deployed to Stores
        files: |
          app-release.apk
        body: |
          🚀 **Biso v${{ env.APP_VERSION }} deployed to both app stores!**
          
          ## 📱 Store Status
          - ✅ **Google Play Console**: Deployed to internal testing track
          - ✅ **App Store Connect**: Uploaded to TestFlight
          
          ## 📋 Build Info
          - Version: ${{ env.APP_VERSION }} (Build ${{ env.BUILD_NUMBER }})
          - Flutter: ${{ env.FLUTTER_VERSION }}
          - Commit: ${{ github.sha }}
          - Built: ${{ steps.date.outputs.date }}
          
          ## 📝 Changes
          ${{ github.event.head_commit.message }}
          
          ## 📲 Downloads
          - Android APK attached for direct install/testing
          - App Bundle deployed to Google Play Console
          - iOS IPA uploaded to TestFlight (check App Store Connect)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}